/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author michael
 */
public class System extends javax.swing.JFrame {

    
    Connection connect;
    PreparedStatement pres;
    PreparedStatement pres1;
    PreparedStatement pres2;
    PreparedStatement pres3;
    PreparedStatement pres4;
    ResultSet out;
    
    /**
     * Creates new form Vehicle
     */
    public System() {
        initComponents();
        vehicleID();
        update_Vtable();
        update_Ctable();
        update_Ftable();
        CustomerID();
    }
    



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    /**
     * This method updates the Vehicle table 
     * and connects to the mysql database of Vehicle
     * 
     */
    public void update_Vtable()
    {
        int colnum;
    
    
        try {
            // Connect to the mysql database
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/best_rent","root","");
            
            
            //Select the vehicle table
            pres = connect.prepareStatement("select * from vehicle");
            ResultSet res = pres.executeQuery();
            ResultSetMetaData resd = res.getMetaData();
            colnum = resd.getColumnCount();
            DefaultTableModel def = (DefaultTableModel) VehicleTable.getModel();
            def.setRowCount(0);
            
            // use the while loop to get the contents from the database
            while (res.next())
            {
                Vector vec = new Vector();
                for (int i = 1; i < colnum; i++)
                {
                    vec.add(res.getString("vehicle_num"));
                    vec.add(res.getString("make"));
                    vec.add(res.getString("model"));
                    vec.add(res.getString("available"));
                    vec.add(res.getString("car_status"));
                    vec.add(res.getString("mileage"));
                    vec.add(res.getString("price"));
                
                
                }
                def.addRow(vec);
            
            
            
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        }
            
           
    
    }
    
    /**
     * This method updates the Customer table 
     * and connects to the mysql database of Customer
     * 
     */
    public void update_Ctable()
    {
        int colnum;
    
    
        try {
            // Connect to the mysql database
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/best_rent","root","");
           
            //Select the customer table
            pres = connect.prepareStatement("select * from customer");
            ResultSet res = pres.executeQuery();
            ResultSetMetaData resd = res.getMetaData();
            colnum = resd.getColumnCount();
            DefaultTableModel def = (DefaultTableModel) CustomerTable.getModel();
            def.setRowCount(0);
            
            
            // use the while loop to get the contents from the database

            while (res.next())
            {
                Vector vec = new Vector();
                for (int i = 1; i < colnum; i++)
                {
                    vec.add(res.getString("id"));
                    vec.add(res.getString("name"));
                    vec.add(res.getString("credits"));
                    vec.add(res.getString("mobile"));
                    vec.add(res.getString("address"));
                
                
                }
                def.addRow(vec);
            
            
            
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        }
            
           
    
    }

     /**
     * This method updates the Rental fee table 
     * and connects to the mysql database of rental
     * 
     */
    public void update_Ftable()
    {
        int colnum;
    
    
        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/best_rent","root","");
            
            
            //Select the rental table
            pres = connect.prepareStatement("select * from rental");
            ResultSet res = pres.executeQuery();
            ResultSetMetaData resd = res.getMetaData();
            colnum = resd.getColumnCount();
            DefaultTableModel def = (DefaultTableModel) FeeTable.getModel();
            def.setRowCount(0);
            
            
            // use the while loop to get the contents from the database

            while (res.next())
            {
                Vector vec = new Vector();
                for (int i = 1; i < colnum; i++)
                {
                    vec.add(res.getString("car_id"));
                    vec.add(res.getString("cust_id"));
                    vec.add(res.getString("fee"));
                    vec.add(res.getString("date"));
                    vec.add(res.getString("due"));
                
                }
                def.addRow(vec);
            
            
            
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        }
            
           
    
    }
    
    
    
    /**
     * This method automatically generates the ID number for each added vehicle
     * Ex. V0001...V0002...V0003...
     */
    public void vehicleID()
    
    {
    
        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/best_rent","root","");
            Statement s = connect.createStatement();
            
            ResultSet res = s.executeQuery("select Max(vehicle_num) from vehicle");
            
            res.next();
            
            res.getString("Max(vehicle_num)");
            
            
            if(res.getString("Max(vehicle_num)") == null)
                
            {
                // Base case, set the name to "V0001"
                txtVnum.setText("V0001");
            
            }else{
            
                long vnum = Long.parseLong(res.getString("Max(vehicle_num)").substring(2,res.getString("Max(vehicle_num)").length()));
                vnum++;
                // Combine the "V0" to other numbers
                txtVnum.setText("V0" + String.format("%03d",vnum));
            
            
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    
    
    }
    
    
     /**
     * This method automatically generates the ID number for each added vehicle
     * Unlike Vehicle ID, customer ID is simply the built in sequence created
     * in the database. Ex 1,2,3,4...8.
     */
    public void CustomerID()
    
    {
    
        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/best_rent","root","");
            Statement s = connect.createStatement();
            
            ResultSet res = s.executeQuery("select Max(id) from customer");
            
            res.next();
            
            res.getString("Max(id)");
            
            
            if(res.getString("Max(id)") == null)
                
            {
                // Base case, customer ID is "1"
                txtCid.setText("1");
            
            }else{
            
                int cnum = Integer.parseInt(res.getString("Max(id)"));
                cnum++;
                
                txtCid.setText(String.valueOf(cnum));
            
            
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    
    
    }
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtVnum = new javax.swing.JTextField();
        txtMake = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMileage = new javax.swing.JTextField();
        comboAva = new javax.swing.JComboBox<>();
        comboStatus = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        VehicleTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtCid = new javax.swing.JTextField();
        txtCName = new javax.swing.JTextField();
        txtMobile = new javax.swing.JTextField();
        btnAdd1 = new javax.swing.JButton();
        btnDelete1 = new javax.swing.JButton();
        btnEdit1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        txtCredits = new javax.swing.JTextField();
        btnClear2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        CustomerTable = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        FeeTable = new javax.swing.JTable();
        btnLogout = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Vehicle Registration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Phosphate", 0, 13))); // NOI18N

        jLabel1.setText("Vehicle No.");

        jLabel2.setText("Make");

        jLabel3.setText("Model");

        jLabel4.setText("Availability");

        txtVnum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVnumActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        jLabel5.setText("Status");

        jLabel6.setText("Mileage");

        comboAva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));

        comboStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Good", "Scrapped" }));

        jLabel7.setText("Price");

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMileage, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(73, 73, 73)
                            .addComponent(txtVnum))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jLabel7))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(100, 100, 100)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtModel)
                                        .addComponent(txtMake)
                                        .addComponent(comboAva, 0, 142, Short.MAX_VALUE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtVnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboAva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMileage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        VehicleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Vehicel No.", "Make", "Model", "Avalability", "Status", "Mileage", "Price"
            }
        ));
        VehicleTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VehicleTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(VehicleTable);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Customer", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Phosphate", 0, 13))); // NOI18N

        jLabel8.setText("Customer ID");

        jLabel9.setText("Customer Name");

        jLabel10.setText("Address");

        jLabel11.setText("Credits");

        txtCid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCidActionPerformed(evt);
            }
        });

        txtMobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMobileActionPerformed(evt);
            }
        });

        btnAdd1.setText("Add");
        btnAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd1ActionPerformed(evt);
            }
        });

        btnDelete1.setText("Delete");
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });

        btnEdit1.setText("Edit");
        btnEdit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdit1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Mobile");

        txtAddress.setColumns(20);
        txtAddress.setRows(5);
        jScrollPane2.setViewportView(txtAddress);

        txtCredits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCreditsActionPerformed(evt);
            }
        });

        btnClear2.setText("Clear");
        btnClear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEdit1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(btnClear2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(49, 49, 49))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel10))
                                .addGap(62, 62, 62)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addComponent(txtCredits, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                        .addComponent(txtCName, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtCid, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel12))
                        .addGap(0, 32, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtCName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtCredits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48))
        );

        CustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Credits", "Mobile No.", "Address"
            }
        ));
        CustomerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustomerTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(CustomerTable);

        btnRefresh.setFont(new java.awt.Font("Phosphate", 0, 13)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Phosphate", 0, 13)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        FeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Vehicle No", "Customer ID", "Fee", "Date", "Due"
            }
        ));
        jScrollPane5.setViewportView(FeeTable);

        btnLogout.setFont(new java.awt.Font("Phosphate", 0, 13)); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Phosphate", 2, 36)); // NOI18N
        jLabel13.setText("We offer You the best rent ");

        jLabel14.setFont(new java.awt.Font("Phosphate", 0, 13)); // NOI18N
        jLabel14.setText("Rental History");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
                            .addComponent(jScrollPane3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(284, 284, 284)
                                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btnLogout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel14)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtVnumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVnumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVnumActionPerformed
    // This method adds a vehicle from the terminal to the table and also the database
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        
        // Generate every content from vehicle to String
        String veno = txtVnum.getText();
        String make = txtMake.getText();
        String model = txtModel.getText();
        String avail = comboAva.getSelectedItem().toString();
        String status = comboStatus.getSelectedItem().toString();
        String mileage = txtMileage.getText();
        String price = txtPrice.getText();
        
        
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/best_rent","root","");
            
            
            pres = connect.prepareStatement("insert into vehicle(vehicle_num,make,model,available,car_status,mileage,price) values(?,?,?,?,?,?,?)");
            
            pres.setString(1, veno);
            pres.setString(2,make);
            pres.setString(3,model);
            pres.setString(4,avail);
            pres.setString(5,status);
            pres.setString(6,mileage);
            pres.setString(7,price);
            pres.executeUpdate();
            JOptionPane.showMessageDialog(this,"Vehicle added successfully");
            
            // Change the vehicle terminal to empty case
            txtMake.setText("");
            txtModel.setText("");
            comboAva.setSelectedIndex(-1);
            comboStatus.setSelectedIndex(-1);
            txtMileage.setText("");
            txtPrice.setText("");
            txtMake.requestFocus();
            vehicleID();
            update_Vtable();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
    }//GEN-LAST:event_btnAddActionPerformed
    
    /* 
    *This method selects the table content and 
    * presents the information on the terminal.
    */
    private void VehicleTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VehicleTableMouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel df1 = (DefaultTableModel)VehicleTable.getModel();
        
             
        int selectIndex = VehicleTable.getSelectedRow();
        
        // Use setText() or setSelectedItem() to present the information from the table to terminal
        txtVnum.setText(df1.getValueAt(selectIndex,0).toString());
        txtMake.setText(df1.getValueAt(selectIndex,1).toString());
        txtModel.setText(df1.getValueAt(selectIndex,2).toString());
        comboAva.setSelectedItem(df1.getValueAt(selectIndex,3).toString());
        comboStatus.setSelectedItem(df1.getValueAt(selectIndex,4).toString());
        txtMileage.setText(df1.getValueAt(selectIndex,5).toString());
        txtPrice.setText(df1.getValueAt(selectIndex,6).toString());
        
        
    }//GEN-LAST:event_VehicleTableMouseClicked

    // This method modify the contents from the terminal and updates to database
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        DefaultTableModel df1 = (DefaultTableModel)VehicleTable.getModel();
        
        int selectIndex = VehicleTable.getSelectedRow();
        
        try {
            // Get every content from the terminal
            String vid = df1.getValueAt(selectIndex,0).toString();
            String make = txtMake.getText();
            String model = txtModel.getText();
            String aval = comboAva.getSelectedItem().toString();
            String stat = comboStatus.getSelectedItem().toString();
            String mile = txtMileage.getText();
            String prc = txtPrice.getText();
            
            
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/best_rent","root","");
            
            pres = connect.prepareStatement("update vehicle set make = ?, model = ?, available = ?, car_status = ?, mileage = ?, price = ? where vehicle_num = ?");
            // Update the content to sql database
            pres.setString(1,make);
            pres.setString(2,model);
            pres.setString(3,aval);
            pres.setString(4,stat);
            pres.setString(5,mile);
            pres.setString(6,prc);
            pres.setString(7,vid);
            pres.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Vehicle updated succesfully!");
            update_Vtable();
            
            
            
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
        
        
    }//GEN-LAST:event_btnEditActionPerformed
    //This method deletes the selected vehicle from the table and also the database
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel df1 = (DefaultTableModel)VehicleTable.getModel();
        
        
        
        int selectIndex = VehicleTable.getSelectedRow();
        
        String vid = df1.getValueAt(selectIndex,0).toString();
        
        int dialogShown = JOptionPane.showConfirmDialog(this,"Are you sure to delete this vehicle?", "Warning",JOptionPane.YES_NO_OPTION);
        
        if (dialogShown == JOptionPane.YES_OPTION)
        {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                 connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/best_rent","root","");
                 
                 //Delete from the database
                 pres = connect.prepareStatement("delete from vehicle where vehicle_num = ?");
                 
                 pres.setString(1, vid);
                 
                 pres.executeUpdate();
                 
                 JOptionPane.showMessageDialog(this, "Vehicle deleted successfully");
                 
                 update_Vtable();
                 
                 
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
            }
           
        
        
        
        
        
        }
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
      dispose();
        
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtCidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCidActionPerformed
    
    // This method adds a customer from the terminal to the table and also the database
    private void btnAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd1ActionPerformed
        // TODO add your handling code here:

        // Generate every content from customer to String
        String cid = txtCid.getText();
        String cname = txtCName.getText();
        String credits = txtCredits.getText();
        String address = txtAddress.getText();
        String cmobile = txtMobile.getText();
        

        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/best_rent","root","");

            pres = connect.prepareStatement("insert into customer (id,name,credits,address,mobile)values(?,?,?,?,?)");

            pres.setString(1, cid);
            pres.setString(2,cname);
            pres.setString(3,credits);
            pres.setString(4,address);
            pres.setString(5,cmobile);

            pres.executeUpdate();
            JOptionPane.showMessageDialog(this,"Customer added successfully");
            // Change the customer terminal to empty case
            txtCName.setText("");
            txtCredits.setText("");
            txtMobile.setText("");
            txtAddress.setText("");

            CustomerID();
            update_Ctable();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAdd1ActionPerformed

        //This method deletes the selected customer from the table and also the database
    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
        // TODO add your handling code here:

        DefaultTableModel df1 = (DefaultTableModel)CustomerTable.getModel();

        int selectIndex = CustomerTable.getSelectedRow();

        String cid = df1.getValueAt(selectIndex,0).toString();

        int dialogShown = JOptionPane.showConfirmDialog(this,"Are you sure to delete this customer?", "Warning",JOptionPane.YES_NO_OPTION);

        if (dialogShown == JOptionPane.YES_OPTION)
        {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/best_rent","root","");

                pres = connect.prepareStatement("delete from customer where id = ?");

                //Delete from the database
                pres.setString(1, cid);

                pres.executeUpdate();

                JOptionPane.showMessageDialog(this, "Customer deleted successfully");

                update_Ctable();

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnDelete1ActionPerformed

        // This method modify the contents from the terminal and updates to database
    private void btnEdit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdit1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel df1 = (DefaultTableModel)CustomerTable.getModel();

        int selectIndex = CustomerTable.getSelectedRow();

        try {

                      // Get every content from the terminal
            String cid = df1.getValueAt(selectIndex,0).toString();
            String name = txtCName.getText();
            String credits = txtCredits.getText();
            String address = txtAddress.getText();
            String mobile = txtMobile.getText();
            

            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/best_rent","root","");

            pres = connect.prepareStatement("update customer set name = ?, credits = ?, address = ?, mobile = ? where id = ?");

            pres = connect.prepareStatement("update vehicle set make = ?, model = ?, available = ?, car_status = ?, mileage = ?, price = ? where vehicle_num = ?");
            // Update the content to sql database
            pres.setString(1,name);
            pres.setString(2,credits);

            pres.setString(3,address);
            pres.setString(4,mobile);
            pres.setString(5,cid);
            pres.executeUpdate();

            JOptionPane.showMessageDialog(this,"Customer updated succesfully!");
            update_Ctable();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(System.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEdit1ActionPerformed

    private void txtCreditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCreditsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCreditsActionPerformed

    // The same as VehicleTableMouseClicked, it presents the content from the table to terminal
    private void CustomerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerTableMouseClicked
        // TODO add your handling code here:

        DefaultTableModel df1 = (DefaultTableModel)CustomerTable.getModel();

        int selectIndex = CustomerTable.getSelectedRow();
        // Use setText() or setSelectedItem() to present the information from the table to terminal
        txtCid.setText(df1.getValueAt(selectIndex,0).toString());
        txtCName.setText(df1.getValueAt(selectIndex,1).toString());
        txtCredits.setText(df1.getValueAt(selectIndex,2).toString());
        txtAddress.setText(df1.getValueAt(selectIndex,4).toString());
        txtMobile.setText(df1.getValueAt(selectIndex,3).toString());
        
        

    }//GEN-LAST:event_CustomerTableMouseClicked

    private void txtMobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMobileActionPerformed
    // This method refresh every table. If there's changes in the database, it refreshes each table, so the contents in the tables get updated
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        
        update_Vtable();
        update_Ctable();
        update_Ftable();
    }//GEN-LAST:event_btnRefreshActionPerformed
    
    // It clears out the shown contents in the terminal, so it's easier for us to add new contents from the terminal
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        
        txtMake.setText("");
        txtModel.setText("");
            comboAva.setSelectedIndex(-1);
            comboStatus.setSelectedIndex(-1);
            txtMileage.setText("");
            txtPrice.setText("");
            txtMake.requestFocus();
            vehicleID();
            update_Vtable();
        
        
    }//GEN-LAST:event_btnClearActionPerformed
    /*
    The same as above. It clears out the contents in customer table.
    */
    private void btnClear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear2ActionPerformed
        // TODO add your handling code here:
        
        txtCName.setText("");
            txtCredits.setText("");
            txtMobile.setText("");
            txtAddress.setText("");

            CustomerID();
            update_Ctable();
        
    }//GEN-LAST:event_btnClear2ActionPerformed
    /*
    Logout button. Creats a new login page.
    */
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        LoginPage login = new LoginPage();
        this.hide();
        login.setVisible(true);
    }//GEN-LAST:event_btnLogoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(System.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(System.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(System.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(System.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new System().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CustomerTable;
    private javax.swing.JTable FeeTable;
    private javax.swing.JTable VehicleTable;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAdd1;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClear2;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEdit1;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JComboBox<String> comboAva;
    private javax.swing.JComboBox<String> comboStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtCName;
    private javax.swing.JTextField txtCid;
    private javax.swing.JTextField txtCredits;
    private javax.swing.JTextField txtMake;
    private javax.swing.JTextField txtMileage;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtVnum;
    // End of variables declaration//GEN-END:variables
}
