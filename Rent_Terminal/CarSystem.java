/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rent;
import java.io.*;
import java.util.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
/**
 *
 * @author michael
 */
public class CarSystem extends javax.swing.JFrame {

    
    Connection connect;
    PreparedStatement pres;
    PreparedStatement pres1;
    PreparedStatement pres2;
    PreparedStatement pres3;
    PreparedStatement pres4;
    ResultSet out;
    
    /**
     * Creates new form Vehicle
     */
    public CarSystem() {
        initComponents();
        vehicleID();
        update_Vtable();
        update_Ctable();
        update_Ftable();
        CustomerID();
    }
    



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    /**
     * This method updates the table and connects to the mysql database
     */
    public void update_Vtable()
    {
        int colnum;
    
    
        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/bestrent","root","");
            
            pres = connect.prepareStatement("select * from vehicle");
            ResultSet res = pres.executeQuery();
            ResultSetMetaData resd = res.getMetaData();
            colnum = resd.getColumnCount();
            DefaultTableModel def = (DefaultTableModel) VehicleTable.getModel();
            def.setRowCount(0);
            
            while (res.next())
            {
                Vector vec = new Vector();
                for (int i = 1; i < colnum; i++)
                {
                    vec.add(res.getString("vehicle_num"));
                    vec.add(res.getString("make"));
                    vec.add(res.getString("model"));
                    vec.add(res.getString("available"));
                    vec.add(res.getString("car_status"));
                    vec.add(res.getString("mileage"));
                    vec.add(res.getString("price"));
                
                
                }
                def.addRow(vec);
            
            
            
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CarSystem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CarSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
            
           
    
    }
    
    public void update_Ctable()
    {
        int colnum;
    
    
        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/bestrent","root","");
            
            pres = connect.prepareStatement("select * from customer");
            ResultSet res = pres.executeQuery();
            ResultSetMetaData resd = res.getMetaData();
            colnum = resd.getColumnCount();
            DefaultTableModel def = (DefaultTableModel) CustomerTable.getModel();
            def.setRowCount(0);
            
            while (res.next())
            {
                Vector vec = new Vector();
                for (int i = 1; i < colnum; i++)
                {
                    vec.add(res.getString("id"));
                    vec.add(res.getString("name"));
                    vec.add(res.getString("credits"));
                    vec.add(res.getString("mobile"));
                    vec.add(res.getString("address"));
                
                
                }
                def.addRow(vec);
            
            
            
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
        }
            
           
    
    }

    public void update_Ftable()
    {
        int colnum;
    
    
        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/bestrent","root","");
            
            pres = connect.prepareStatement("select * from rental");
            ResultSet res = pres.executeQuery();
            ResultSetMetaData resd = res.getMetaData();
            colnum = resd.getColumnCount();
            DefaultTableModel def = (DefaultTableModel) FeeTable.getModel();
            def.setRowCount(0);
            
            while (res.next())
            {
                Vector vec = new Vector();
                for (int i = 1; i < colnum; i++)
                {
                    vec.add(res.getString("car_id"));
                    vec.add(res.getString("cust_id"));
                    vec.add(res.getString("fee"));
                    vec.add(res.getString("date"));
                    vec.add(res.getString("due"));
                
                }
                def.addRow(vec);
            
            
            
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CarSystem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CarSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
            
           
    
    }
    
    
    
    /**
     * This method automatically generates the ID number for each added vehicle
     * Ex. V0001...V0002...V0003...
     */
    public void vehicleID()
    
    {
    
        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/bestrent","root","");
            Statement s = connect.createStatement();
            
            ResultSet res = s.executeQuery("select Max(vehicle_num) from vehicle");
            
            res.next();
            
            res.getString("Max(vehicle_num)");
            
            
            if(res.getString("Max(vehicle_num)") == null)
                
            {
            
                txtVnum.setText("V0001");
            
            }else{
            
                long vnum = Long.parseLong(res.getString("Max(vehicle_num)").substring(2,res.getString("Max(vehicle_num)").length()));
                vnum++;
                
                txtVnum.setText("V0" + String.format("%03d",vnum));
            
            
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CarSystem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CarSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    
    
    }
    
    public void CustomerID()
    
    {
    
        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/bestrent","root","");
            Statement s = connect.createStatement();
            
            ResultSet res = s.executeQuery("select Max(id) from customer");
            
            res.next();
            
            res.getString("Max(id)");
            
            
            if(res.getString("Max(id)") == null)
                
            {
            
                txtCid.setText("1");
            
            }else{
            
                int cnum = Integer.parseInt(res.getString("Max(id)"));
                cnum++;
                
                txtCid.setText(String.valueOf(cnum));
            
            
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CarSystem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CarSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    
    
    }
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtVnum = new javax.swing.JTextField();
        txtMake = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMileage = new javax.swing.JTextField();
        comboAva = new javax.swing.JComboBox<>();
        comboStatus = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        VehicleTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Vehicle Registration"));

        jLabel1.setText("Vehicle No.");

        jLabel2.setText("Make");

        jLabel3.setText("Model");

        jLabel4.setText("Availability");

        txtVnum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVnumActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        jLabel5.setText("Status");

        jLabel6.setText("Mileage");

        comboAva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));

        comboStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Good", "Scrapped" }));

        jLabel7.setText("Price");

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(73, 73, 73)
                        .addComponent(txtVnum))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(73, 73, 73)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtModel)
                            .addComponent(txtMake)
                            .addComponent(txtMileage)
                            .addComponent(comboAva, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboStatus, javax.swing.GroupLayout.Alignment.TRAILING, 0, 142, Short.MAX_VALUE)
                            .addComponent(txtPrice))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtVnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboAva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMileage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        VehicleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Vehicel No.", "Make", "Model", "Avalability", "Status", "Mileage", "Price"
            }
        ));
        VehicleTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VehicleTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(VehicleTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(166, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(553, 553, 553))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtVnumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVnumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVnumActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        
        
        String veno = txtVnum.getText();
        String make = txtMake.getText();
        String model = txtModel.getText();
        String avail = comboAva.getSelectedItem().toString();
        String status = comboStatus.getSelectedItem().toString();
        String mileage = txtMileage.getText();
        String price = txtPrice.getText();
        
        
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/bestrent","root","");
            
            
            pres = connect.prepareStatement("insert into vehicle(vehicle_num,make,model,available,car_status,mileage,price) values(?,?,?,?,?,?,?)");
            
            pres.setString(1, veno);
            pres.setString(2,make);
            pres.setString(3,model);
            pres.setString(4,avail);
            pres.setString(5,status);
            pres.setString(6,mileage);
            pres.setString(7,price);
            pres.executeUpdate();
            JOptionPane.showMessageDialog(this,"Vehicle added successfully");
            
            txtMake.setText("");
            txtModel.setText("");
            comboAva.setSelectedIndex(-1);
            comboStatus.setSelectedIndex(-1);
            txtMileage.setText("");
            txtPrice.setText("");
            txtMake.requestFocus();
            vehicleID();
            update_Vtable();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CarSystem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CarSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void VehicleTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VehicleTableMouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel df1 = (DefaultTableModel)VehicleTable.getModel();
        
             
        int selectIndex = VehicleTable.getSelectedRow();
        
        txtVnum.setText(df1.getValueAt(selectIndex,0).toString());
        txtMake.setText(df1.getValueAt(selectIndex,1).toString());
        txtModel.setText(df1.getValueAt(selectIndex,2).toString());
        comboAva.setSelectedItem(df1.getValueAt(selectIndex,3).toString());
        comboStatus.setSelectedItem(df1.getValueAt(selectIndex,4).toString());
        txtMileage.setText(df1.getValueAt(selectIndex,5).toString());
        txtPrice.setText(df1.getValueAt(selectIndex,6).toString());
        
        
    }//GEN-LAST:event_VehicleTableMouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        DefaultTableModel df1 = (DefaultTableModel)VehicleTable.getModel();
        
        int selectIndex = VehicleTable.getSelectedRow();
        
        try {
            
            String vid = df1.getValueAt(selectIndex,0).toString();
            String make = txtMake.getText();
            String model = txtModel.getText();
            String aval = comboAva.getSelectedItem().toString();
            String stat = comboStatus.getSelectedItem().toString();
            String mile = txtMileage.getText();
            String prc = txtPrice.getText();
            
            
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/bestrent","root","");
            
            pres = connect.prepareStatement("update vehicle set make = ?, model = ?, available = ?, car_status = ?, mileage = ?, price = ? where vehicle_num = ?");
          
            pres.setString(1,make);
            pres.setString(2,model);
            pres.setString(3,aval);
            pres.setString(4,stat);
            pres.setString(5,mile);
            pres.setString(6,prc);
            pres.setString(7,vid);
            pres.executeUpdate();
            
            JOptionPane.showMessageDialog(this,"Vehicle updated succesfully!");
            update_Vtable();
            
            
            
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CarSystem.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CarSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
        
        
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel df1 = (DefaultTableModel)VehicleTable.getModel();
        
        
        
        int selectIndex = VehicleTable.getSelectedRow();
        
        String vid = df1.getValueAt(selectIndex,0).toString();
        
        int dialogShown = JOptionPane.showConfirmDialog(this,"Are you sure to delete this vehicle?", "Warning",JOptionPane.YES_NO_OPTION);
        
        if (dialogShown == JOptionPane.YES_OPTION)
        {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                 connect = DriverManager.getConnection("jdbc:mysql://localhost:3302/bestrent","root","");
                 
                 pres = connect.prepareStatement("delete from vehicle where vehicle_num = ?");
                 
                 pres.setString(1, vid);
                 
                 pres.executeUpdate();
                 
                 JOptionPane.showMessageDialog(this, "Vehicle deleted successfully");
                 
                 update_Vtable();
                 
                 
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CarSystem.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(CarSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
           
        
        
        
        
        
        }
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        
        txtMake.setText("");
        txtModel.setText("");
            comboAva.setSelectedIndex(-1);
            comboStatus.setSelectedIndex(-1);
            txtMileage.setText("");
            txtPrice.setText("");
            txtMake.requestFocus();
            vehicleID();
            update_Vtable();
        
        
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CarSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CarSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CarSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CarSystem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable VehicleTable;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JComboBox<String> comboAva;
    private javax.swing.JComboBox<String> comboStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtMake;
    private javax.swing.JTextField txtMileage;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtVnum;
    // End of variables declaration//GEN-END:variables
}
